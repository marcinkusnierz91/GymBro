@model IEnumerable<IGrouping<int, GymBro.Models.TrainingModel>>

@{
    ViewData["Title"] = "Charts";
    var selectedYear = ViewBag.SelectedYear ?? DateTime.Now.Year;
    var selectedExercise = ViewBag.SelectedExercise ?? "";
    var selectedMusclePart = ViewBag.SelectedMusclePart ?? "";
}

<h1>@ViewData["Title"]</h1>

<form asp-controller="Charts" asp-action="Filter" method="get">
    <label for="year">Select year:</label>
    <select id="year" name="year">
        @foreach (var year in ViewBag.AvailableYears)
        {
            if (year == ViewBag.SelectedYear)
            {
                <option value="@year" selected>@year</option>
            }
            else
            {
                <option value="@year">@year</option>
            }
        }
    </select>

    <label for="exercise">Select exercise:</label>
    <select id="exercise" name="exercise">
        <option value="">All</option>
        @foreach (var exercise in ViewBag.AvailableExercises)
        {
            if (exercise == ViewBag.SelectedExercise)
            {
                <option value="@exercise" selected>@exercise</option>
            }
            else
            {
                <option value="@exercise">@exercise</option>
            }
        }
    </select>

    <label for="musclePart">Select muscle part:</label>
    <select id="musclePart" name="musclePart">
        <option value="">All</option>
        @foreach (var musclePart in ViewBag.AvailableMuscleParts)
        {
            if (musclePart == ViewBag.SelectedMusclePart)
            {
                <option value="@musclePart" selected>@musclePart</option>
            }
            else
            {
                <option value="@musclePart">@musclePart</option>
            }
        }
    </select>

    <input type="submit" value="Filter" />
</form>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@if (ViewBag.SelectedYear != null)
{
    var chartId = $"chart-{ViewBag.SelectedYear}";
    var months = Enumerable.Range(1, 12).ToList();
    var counts = months.Select(month =>
    {
        return Model.SelectMany(group => group)
            .Count(t => t.TrainingDate.Month == month && t.TrainingDate.Year == ViewBag.SelectedYear && 
                        (string.IsNullOrEmpty(ViewBag.SelectedExercise) || 
                        t.Exercises.Any(e => e.ExerciseName == ViewBag.SelectedExercise)) &&
                        (string.IsNullOrEmpty(ViewBag.SelectedMusclePart) ||
                        t.Exercises.Any(e => e.MusclePart == ViewBag.SelectedMusclePart)));
    }).ToList();

    <h2>Year: @ViewBag.SelectedYear</h2>
    <canvas id="@chartId" width="400" height="200"></canvas>
    <script>
        var ctx = document.getElementById('@chartId').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(months)),
                datasets: [{
                    label: 'Number of trainings',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(counts)),
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {}
        });
    </script>
}
